"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[287],{8237:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>a,frontMatter:()=>r,metadata:()=>l,toc:()=>d});var s=n(4848),i=n(8453);const r={sidebar_position:3.5,title:"Text & Typography"},o="Text & Typography",l={id:"usage/text",title:"Text & Typography",description:"The useSx hook takes an option as the second argument, and there is styleType there.",source:"@site/docs/usage/text.mdx",sourceDirName:"usage",slug:"/usage/text",permalink:"/react-native-styled-system/docs/usage/text",draft:!1,unlisted:!1,editUrl:"https://github.com/mym0404/react-native-styled-system/tree/main/doc/docs/usage/text.mdx",tags:[],version:"current",sidebarPosition:3.5,frontMatter:{sidebar_position:3.5,title:"Text & Typography"},sidebar:"tutorialSidebar",previous:{title:"Component",permalink:"/react-native-styled-system/docs/usage/component"},next:{title:"Pass styles and parsing priorities",permalink:"/react-native-styled-system/docs/usage/style-parsing"}},c={},d=[{value:"Define theme typographies",id:"define-theme-typographies",level:2},{value:"Create styled Text component",id:"create-styled-text-component",level:2},{value:"Use it!",id:"use-it",level:2}];function p(e){const t={admonition:"admonition",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{id:"text--typography",children:"Text & Typography"}),"\n",(0,s.jsxs)(t.p,{children:["The useSx hook takes an option as the second argument, and there is ",(0,s.jsx)(t.code,{children:"styleType"})," there."]}),"\n",(0,s.jsxs)(t.p,{children:["If you set it to ",(0,s.jsx)(t.code,{children:"TextStyle"}),", you can apply the style of ",(0,s.jsx)(t.code,{children:"TextStyle"})," in addition to all the styles included in ",(0,s.jsx)(t.code,{children:"ViewStyle"}),"."]}),"\n",(0,s.jsxs)(t.admonition,{type:"info",children:[(0,s.jsxs)(t.p,{children:["For TypeScript users, the ",(0,s.jsx)(t.code,{children:"TextSxProps"})," type exists."]}),(0,s.jsxs)(t.p,{children:["This is text version of ",(0,s.jsx)(t.code,{children:"SxProps"}),". It includes all kinds of properties in SxProps and text properties."]})]}),"\n",(0,s.jsx)(t.h2,{id:"define-theme-typographies",children:"Define theme typographies"}),"\n",(0,s.jsxs)(t.p,{children:["We can set our typographies in theme from ",(0,s.jsx)(t.code,{children:"ThemedDict"})," passing to ",(0,s.jsx)(t.code,{children:"StyledSystemProvider"}),"."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-tsx",children:"const AppTheme = {\n  /* ... */\n  typography: {\n    title: { fontSize: 18, textAlign: 'center', /* ... */ }\n  }\n}\n\nexport default AppTheme;\n"})}),"\n",(0,s.jsx)(t.p,{children:"In typography value, the supported properties are followings."}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.code,{children:"fontFamily"})}),"\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.code,{children:"fontSize"})}),"\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.code,{children:"fontWeight"})}),"\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.code,{children:"lineHeight"})}),"\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.code,{children:"letterSpacing"})}),"\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.code,{children:"textAlign"})}),"\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.code,{children:"fontStyle"})}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"create-styled-text-component",children:"Create styled Text component"}),"\n",(0,s.jsx)(t.p,{children:"We can define our new Text component like this."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-tsx",metastring:"title='Txt.tsx'",children:"import { Text, TextProps } from 'react-native';\nimport { TextSxProps, useSx } from '@react-native-styled-system/core';\n\ntype TxtProps = {} & TextSxProps & TextProps;\nconst Txt = (props: TxtProps) => {\n  const { getStyle, filteredProps } = useSx(props, { styleType: 'TextStyle' });\n  return <Text style={getStyle()} {...filteredProps} />;\n};\n\nexport { Txt };\nexport type { TxtProps };\n"})}),"\n",(0,s.jsx)(t.h2,{id:"use-it",children:"Use it!"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-tsx",children:"<Box p={8} radius={'lg'}>\n  <Txt mt={4} t={'title'}>\n    React Native\n  </Txt>\n</Box>\n"})})]})}function a(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>l});var s=n(6540);const i={},r=s.createContext(i);function o(e){const t=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);